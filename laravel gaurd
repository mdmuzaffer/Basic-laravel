
How to make multiple auth using gaurd in laravel 6
=============================================================

1. Create migration for admins
To make the admins table, run the following command:

php artisan make:migration create_admins_table
From the database/migrations directory, open the admins migrations file and edit it as follows:
-------------------------------------------
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateAdminsTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('admins', function (Blueprint $table) {
            $table->bigIncrements('id');
			$table->string('name');
			$table->string('type');
			$table->string('mobile');
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
			$table->string('image');
			$table->integer('status');
            $table->rememberToken();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('admins');
    }
}

-------------------------

2. Migrate the database
Now that we have defined our tables, let us migrate the database:
-----------------------
php artisan migrate

3. Admin model
To make the model for the admins, run the following command:

php artisan make:model Admin
------------------------------

<?php

namespace App;

use Illuminate\Notifications\Notifiable;
use Illuminate\Foundation\Auth\User as Authenticatable;

use Illuminate\Database\Eloquent\Model;

class Admin extends Authenticatable
{
	use Notifiable;

	protected $guard = 'admin';

	protected $fillable = [
		'name', 'email', 'email_verified_at', 'type', 'mobile', 'image', 'status'
	];

	protected $hidden = [
		'password', 'remember_token',
	];
    
}
-----------------------------------------------

Define the guards
Laravel guards define how users are authenticated for each request. Laravel comes with some guards for authentication, but we can also create ours as well. This will enable us to use Laravelâ€™s default authentication system with our Admin and Writer models as well.

Open config/auth.php and add the new guards edit as follows:

-----------------------
    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],
		'admin' => [               -------------->added gaurd's name
            'driver' => 'session',
            'provider' => 'admins',       --------------->updated table name
        ],
        'api' => [
            'driver' => 'token',
            'provider' => 'users',
            'hash' => false,
        ],
    ],
---------------------------------------------
I have also need to added class in provider array in same auth file as like below

------------------------------

 'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => App\User::class,
        ],
		'admins' => [             --------------> gaurd admin name
            'driver' => 'eloquent',
            'model' => App\Admin::class,   ------------->model class name
        ],
	----------------------------------------

4. Now I have created a midleware 
 php artisan make:middleware Admin

and added Class in kernal.php in the middleware group array

    protected $routeMiddleware = [
        'auth' => \App\Http\Middleware\Authenticate::class,
        'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,
        'bindings' => \Illuminate\Routing\Middleware\SubstituteBindings::class,
        'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,
        'can' => \Illuminate\Auth\Middleware\Authorize::class,
        'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,
        'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,
        'signed' => \Illuminate\Routing\Middleware\ValidateSignature::class,
        'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,
        'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,
	'admin' => \App\Http\Middleware\Admin::class, ------------->added class
    ];
    
5. I checked gaurd in the created middlewar file 
-----------------------------------------------

<?php

namespace App\Http\Middleware;

use Closure;
use Auth;
class Admin
{
    /**
     * Handle an incoming request.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Closure  $next
     * @return mixed
     */
    public function handle($request, Closure $next)
    {
		if(!Auth::guard('admin')->check()){
			return redirect('/admin/login');
		}
        return $next($request);
    }
}

-----------------------------------------------------

Now I have added middleware class in the routing web.php file with group routing.

Route::group(['middleware'=>['admin']],function(){
	Route::get('/dashboard', 'AdminController@adminUser');	
	});












