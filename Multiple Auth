Question :- How to create Multiple auth in laravel 6 ?
-------------------------------------------------------------
Answer:- 
1. First of all setup laravel project  - command
composer create-project --prefer-dist laravel/laravel multipleauth

2. Now create default laravel auth system - command
-> php artisan ui vue --auth
-> composer require laravel/ui
-> php artisan migrate

3. Now you have created default laravel auth for admin section can login.

4. Now this is the most important things default auth system and table use for front users login because you can find the data by Auth
check method like - 

if(Auth::check()){
			return view('front.home'); or
      {{Auth::user()['name']}}
}

5. Ceate a table for admin login - command
php artisan make:migration create_admins_table

6. Now add the admin migration table fields in the table -create_admins_table 
code:-
-------------------------

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateAdminsTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('admins', function (Blueprint $table) {
            $table->bigIncrements('id');
			$table->string('name');
            $table->string('email');
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
            $table->tinyInteger('status')->default('1');
            $table->rememberToken();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('admins');
    }
}

---------------------------

7. Now run the command to create table into the database- command
php artisan migrate

8. Now create Admin model and controller -command
- php artisan make:model Admin
- php artisan make:controller AdminController

9. Now It is the Important things create a form for admin login and get form data in the AdminController and here
add the code to count of user for admin not add code Auth::attempt , Because auth attemp query store data in auth system .
So, you should to use for front users Auth::attempt query.
Code
------------------------------------------------------
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Admin;
use Session;
class AdminController extends Controller
{
    public function adminLogin(Request $request){
		if($request->isMethod('post')){
			$adminData = $request->all();
			$adminCount = Admin::where(['email'=>$adminData['email'],'password'=>md5($adminData['password']),'status'=>1])->count();
			if($adminCount >0){
				$adminDetails = Admin::where(['email'=>$adminData['email'],'password'=>md5($adminData['password']),'status'=>1])->first()->toArray();
				Session::put('AdminSession',$adminDetails);
				return redirect('/admin/dashboard');
			}
		}
		return view('backend.admin_login');
	}
	
	public function admindashboard(){
		return view('backend.home');
	}
	
	public function adminLogout(){
		Session::flush();
		return redirect('/');
	}
}

-----------------------------------------------------

10. Now create a middleware for admin user and check admin session (AdminSession) also redirect - command 
- php artisan make:middleware BackendAdmin
code of middleware:-
---------------------------------------------
<?php
namespace App\Http\Middleware;
use Closure;
use Session;
class BackendAdmin
{
    /**
     * Handle an incoming request.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Closure  $next
     * @return mixed
     */
    public function handle($request, Closure $next)
    {
		if(empty(Session::has('AdminSession'))){
			return redirect('/');
		}
        return $next($request);
    }
}

---------------------------------------------

11. Now update kernal.php file of created middleware in the - protected $routeMiddleware array like
code:-
--------------------------------------------
protected $routeMiddleware = [
        'auth' => \App\Http\Middleware\Authenticate::class,
        'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,
        'bindings' => \Illuminate\Routing\Middleware\SubstituteBindings::class,
        'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,
        'can' => \Illuminate\Auth\Middleware\Authorize::class,
        'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,
        'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,
        'signed' => \Illuminate\Routing\Middleware\ValidateSignature::class,
        'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,
        'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,
	// my updated both front and admin middleware
	-----------------------------------------------------------
	'FrontUser' => \App\Http\Middleware\FrontUser::class,			// my updated code 
	'BackendAdmin' => \App\Http\Middleware\BackendAdmin::class,
	------------------------------------------------------------------
    ];

-------------------------------------------

12. Also  now  need to add group middleware rout in the web.php file to protect rout can not access with out login 
code:-
---------------------------------------------------------------------      

//Admin controller
Route::Match(['get','post'],'/admin', 'AdminController@adminLogin');
Route::group(['middleware' => 'BackendAdmin'], function(){
    Route::Match(['get','post'],'/admin/dashboard', 'AdminController@admindashboard');
	Route::get('/admin/logout', 'AdminController@adminLogout');
});

---------------------------------------------------------------------
13. Now almost you have done and also you can get the data from session for admin user like

code:-
------------------------------------------------------------------


@extends('layouts.app')
@section('content')
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">Dashboard <p style="float:right;"><a href="{{url('/admin/logout')}}">Logout</a></p></div>
				
                <div class="card-body">
				
                    @if (session('status'))
                        <div class="alert alert-success" role="alert">
                            {{ session('status') }}
                        </div>
                    @endif
					
                    You are logged in!<br>
			{{Session::get('AdminSession')['name']}}
			<?php 
			echo"<pre>";
			print_r(Session::get('AdminSession');
			?>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection



-------------------------------------------------------------------

14. Now you can see How to create Front user auth system using Auth::attemp();



















